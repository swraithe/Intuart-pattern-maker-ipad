import {
    Modal,
    ModalOverlay,
    ModalContent,
    ModalHeader,
    ModalFooter,
    ModalBody,
    Input
} from '@chakra-ui/react'
import { useState } from 'react';
import InvitedUser from './InvitedUser';

export default function ShareDialog({ isOpen, onClose }) {

    const [newUser, setNewUser] = useState("")
    const [invitedUsers, setInvitedUsers] = useState([
        "example@mail.com"
    ])

    return (
        <Modal isCentered isOpen={isOpen} onClose={onClose} size="xl">
            <ModalOverlay
                bg='blackAlpha.300'
                backdropFilter='blur(3px) hue-rotate(90deg)'
            />
            <ModalContent className="!rounded-3xl">
                <ModalHeader>
                    <div className='flex gap-4 items-center'>
                        <svg width="161" height="26" viewBox="0 0 161 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15.2 25H0.608L4.672 1.96H10.432L7.264 20.008H16.096L15.2 25ZM24.6123 20.904C25.1029 20.904 25.5403 20.7973 25.9243 20.584L25.7643 24.2C24.7616 25.032 23.6203 25.448 22.3403 25.448C20.3989 25.448 19.1403 25 18.5643 24.104C18.1803 23.5067 17.9883 22.8773 17.9883 22.216C17.9883 21.5333 18.0309 20.936 18.1163 20.424L20.0363 9.608H25.4763L23.6843 19.688C23.6629 19.816 23.6523 19.9333 23.6523 20.04C23.6523 20.616 23.9723 20.904 24.6123 20.904ZM20.6763 4.392C20.6763 3.02667 20.9749 2.03467 21.5723 1.416C22.1909 0.775999 23.1403 0.455999 24.4203 0.455999C26.2123 0.455999 27.1083 1.24533 27.1083 2.824C27.1083 4.168 26.7989 5.14933 26.1803 5.768C25.5829 6.38667 24.6336 6.696 23.3323 6.696C21.5616 6.696 20.6763 5.928 20.6763 4.392ZM44.1155 9.608C44.4142 10.504 44.5635 11.6987 44.5635 13.192C44.5635 14.664 44.3822 16.0827 44.0195 17.448C43.6568 18.8133 43.1022 20.1147 42.3555 21.352C41.6302 22.568 40.6062 23.56 39.2835 24.328C37.9822 25.0747 36.4782 25.448 34.7715 25.448C32.1048 25.448 30.2595 24.904 29.2355 23.816C28.5528 23.0907 28.2115 21.9813 28.2115 20.488C28.2115 19.784 28.2968 18.984 28.4675 18.088L29.9715 9.608H35.4115L33.9075 18.12C33.8435 18.44 33.8115 18.728 33.8115 18.984C33.8115 20.2 34.4408 20.808 35.6995 20.808C37.9182 20.808 39.0275 18.4827 39.0275 13.832C39.0275 12.744 38.9422 11.5387 38.7715 10.216L38.6755 9.608H44.1155ZM52.8243 25.448C48.3869 25.448 46.1683 23.912 46.1683 20.84C46.1683 20.4133 46.2109 19.9547 46.2963 19.464L46.9683 15.496C47.3309 13.448 48.2696 11.88 49.7843 10.792C51.3203 9.68267 53.3469 9.128 55.8643 9.128C60.1523 9.128 62.2963 10.7493 62.2963 13.992C62.2963 14.4613 62.2536 14.9733 62.1683 15.528L61.7843 17.8H52.0243L51.8963 18.536C51.8536 18.792 51.8323 19.0267 51.8323 19.24C51.8323 20.4133 52.5256 21 53.9123 21C54.4243 21 54.8616 20.84 55.2243 20.52C55.5869 20.2 55.8003 19.8267 55.8643 19.4L61.1763 19.464C60.4723 23.4533 57.6883 25.448 52.8243 25.448ZM56.6643 15.848C56.7496 15.4853 56.7923 15.1547 56.7923 14.856C56.7923 14.536 56.6536 14.216 56.3763 13.896C56.0989 13.576 55.6509 13.416 55.0323 13.416C54.4349 13.416 53.8803 13.6187 53.3683 14.024C52.8776 14.4293 52.5363 15.0373 52.3443 15.848H56.6643ZM87.704 12.936C87.704 13.64 87.4907 14.2907 87.064 14.888H81.816C81.9867 14.76 82.072 14.5467 82.072 14.248C82.072 13.9493 81.9013 13.7147 81.56 13.544C81.2187 13.352 80.7813 13.256 80.248 13.256C78.648 13.256 77.848 13.7467 77.848 14.728C77.848 15.112 78.1467 15.3893 78.744 15.56C79.3413 15.7307 80.0667 15.8693 80.92 15.976C81.7733 16.0827 82.6267 16.2427 83.48 16.456C84.3333 16.648 85.0587 17.0427 85.656 17.64C86.2533 18.2373 86.552 19.0373 86.552 20.04C86.552 21.8107 85.8373 23.1547 84.408 24.072C83 24.9893 80.9413 25.448 78.232 25.448C75.5227 25.448 73.624 25.0107 72.536 24.136C71.6827 23.4533 71.256 22.5147 71.256 21.32C71.256 20.9787 71.288 20.6267 71.352 20.264L76.696 20.2C76.6533 20.4987 76.824 20.7653 77.208 21C77.6133 21.2133 78.2 21.32 78.968 21.32C79.736 21.32 80.2907 21.2453 80.632 21.096C80.9733 20.9253 81.144 20.616 81.144 20.168C81.144 19.8693 80.8453 19.6667 80.248 19.56C79.6507 19.432 78.9147 19.3253 78.04 19.24C77.1867 19.1547 76.3227 19.016 75.448 18.824C74.5947 18.632 73.8693 18.2267 73.272 17.608C72.6747 16.9893 72.376 16.1787 72.376 15.176C72.376 13.2347 73.1227 11.7413 74.616 10.696C76.1307 9.65067 78.3067 9.128 81.144 9.128C85.5173 9.128 87.704 10.3973 87.704 12.936ZM105.875 20.904C106.365 20.904 106.803 20.7973 107.187 20.584L107.027 24.2C106.024 25.032 104.883 25.448 103.603 25.448C100.701 25.448 99.2505 24.232 99.2505 21.8C99.2505 21.3733 99.2932 20.9147 99.3785 20.424L100.083 16.488C100.147 16.104 100.179 15.72 100.179 15.336C100.179 14.312 99.6345 13.8 98.5465 13.8C97.4798 13.8 96.6478 14.1627 96.0505 14.888L94.2585 25H88.8185L93.1065 0.711998H98.5465L96.7225 11.048C97.8958 9.78933 99.3678 9.16 101.139 9.16C103.293 9.16 104.691 9.64 105.331 10.6C105.779 11.24 106.003 11.9547 106.003 12.744C106.003 13.5333 105.939 14.2587 105.811 14.92L104.947 19.688C104.925 19.816 104.915 19.9333 104.915 20.04C104.915 20.616 105.235 20.904 105.875 20.904ZM124.087 20.072C124.087 20.6267 124.364 20.904 124.919 20.904C125.495 20.904 125.975 20.7973 126.359 20.584L126.199 24.2C125.175 25.032 124.023 25.448 122.743 25.448C120.396 25.448 119.095 24.5947 118.839 22.888C117.772 24.5947 116.204 25.448 114.135 25.448C110.636 25.448 108.887 23.944 108.887 20.936C108.887 20.424 108.94 19.8587 109.047 19.24L109.719 15.496C110.06 13.576 110.839 12.0507 112.055 10.92C113.292 9.768 114.892 9.192 116.855 9.192C118.839 9.192 120.183 9.65067 120.887 10.568L121.047 9.608H125.911L124.119 19.688C124.098 19.816 124.087 19.944 124.087 20.072ZM114.615 18.536C114.572 18.728 114.551 18.9947 114.551 19.336C114.551 19.6773 114.711 20.0187 115.031 20.36C115.351 20.68 115.884 20.84 116.631 20.84C117.399 20.84 118.06 20.5413 118.615 19.944L119.575 14.568C119.34 14.0347 118.786 13.768 117.911 13.768C116.268 13.768 115.308 14.5573 115.031 16.136L114.615 18.536ZM143.849 12.872C143.849 13.5973 143.721 14.3013 143.465 14.984C143.23 15.6667 142.996 16.168 142.761 16.488L142.409 16.936H137.577C138.11 16.4453 138.377 15.8373 138.377 15.112C138.377 14.728 138.249 14.4187 137.993 14.184C137.758 13.928 137.428 13.8 137.001 13.8C136.276 13.8 135.646 14.1627 135.113 14.888L133.321 25H127.881L130.601 9.608H135.657L135.273 11.752C136.489 10.024 137.961 9.16 139.689 9.16C141.076 9.16 142.11 9.49067 142.793 10.152C143.497 10.8133 143.849 11.72 143.849 12.872ZM151.231 25.448C146.793 25.448 144.575 23.912 144.575 20.84C144.575 20.4133 144.617 19.9547 144.703 19.464L145.375 15.496C145.737 13.448 146.676 11.88 148.191 10.792C149.727 9.68267 151.753 9.128 154.271 9.128C158.559 9.128 160.703 10.7493 160.703 13.992C160.703 14.4613 160.66 14.9733 160.575 15.528L160.191 17.8H150.431L150.303 18.536C150.26 18.792 150.239 19.0267 150.239 19.24C150.239 20.4133 150.932 21 152.319 21C152.831 21 153.268 20.84 153.631 20.52C153.993 20.2 154.207 19.8267 154.271 19.4L159.583 19.464C158.879 23.4533 156.095 25.448 151.231 25.448ZM155.071 15.848C155.156 15.4853 155.199 15.1547 155.199 14.856C155.199 14.536 155.06 14.216 154.783 13.896C154.505 13.576 154.057 13.416 153.439 13.416C152.841 13.416 152.287 13.6187 151.775 14.024C151.284 14.4293 150.943 15.0373 150.751 15.848H155.071Z" fill="black" />
                        </svg>
                    </div>
                </ModalHeader>
                <ModalBody>
                    <p className="font-bold text-lg">Invite via email</p>
                    <div className='flex items-center gap-2 mt-2'>
                        <Input variant='outline' borderColor="black" className='!rounded-full' value={newUser} onChange={(e) => setNewUser(e.target.value)} />
                        <button
                            className="rounded-full bg-[#383838] border-[#383838] text-[#fff] border px-4 py-1 ml-2 text-lg"
                            onClick={() => {
                                console.log(newUser);
                                if (!invitedUsers.find((e) => e === newUser)) {
                                    setInvitedUsers(
                                        [
                                            ...invitedUsers,
                                            newUser
                                        ]
                                    );
                                    setNewUser("");
                                }
                            }}>
                            Invite
                        </button>
                    </div>
                    <p className="font-bold text-lg mt-8">Invited users:</p>
                    <div className='flex flex-col gap-2'>
                        {
                            invitedUsers.map((user, index) => (
                                <InvitedUser
                                    key={index}
                                    user={user}
                                    onRemove={() => {
                                        
                                    }}
                                />
                            ))
                        }
                    </div>
                </ModalBody>
                <ModalFooter>
                    <button className="rounded-full bg-[#fff] text-black border px-4 py-1 border-[#000] text-lg" onClick={onClose}>Copy invite link</button>
                    <button className="rounded-full bg-[#383838] border-[#383838] text-[#fff] border px-4 py-1 ml-2 text-lg" onClick={onClose}>Done</button>
                </ModalFooter>
            </ModalContent>
        </Modal>
    )
}